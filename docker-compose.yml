version: '3'

networks:
  kafka-net:
    driver: bridge

services:

  zookeeper-server:
    image: 'bitnami/zookeeper:latest'
    networks:
      - kafka-net
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka-server1:
    image: 'bitnami/kafka:latest'
    networks:
      - kafka-net
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      - KAFKA_BROKER_ID:1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-server1:9092,PLAINTEXT_HOST://kafka-server1:29092
    depends_on:
      - zookeeper-server

  kafka-server2:
    image: 'bitnami/kafka:latest'
    networks:
      - kafka-net
    ports:
      - '9093:9092'
      - '29093:29093'
    environment:
      - KAFKA_BROKER_ID:2
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9093,PLAINTEXT_HOST://:29093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-server2:9093,PLAINTEXT_HOST://kafka-server2:29093
    depends_on:
      - zookeeper-server

  docker-mongodb:
    image: mongo:latest
    environment:
      ADVERTISED_HOST: 127.0.0.1
      ADVERTISED_PORT: 27017
    ports:
      - "27017:27017"
    networks:
      - kafka-net

  customer-microservice:
    build:
      context: .
      dockerfile: customer-app/Dockerfile
    container_name: customer-microservice
    ports:
      - "8080:8080"
    networks:
      - kafka-net
    depends_on:
      - kafka-server1
      - kafka-server2
      - docker-mongodb
    environment:
      - KAFKA_SERVERS=kafka-server1:29092,kafka-server2:29093